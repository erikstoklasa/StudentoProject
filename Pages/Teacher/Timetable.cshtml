@page
@model SchoolGradebook.Pages.Teacher.TimetableModel
@using SchoolGradebook.Services
@using System.Globalization;
@{
    ViewData["Title"] = "Rozvrh hodin";
    string[] days = { "Pondělí", "Úterý", "Středa", "Čtvrtek", "Pátek" };
    System.Threading.Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("cs-CZ");
    DateTime firstDayOfTermStartWeek = Model.TermStart.AddDays(-(int)Model.TermStart.DayOfWeek);
    DateTime firstDayOfThisWeek = firstDayOfTermStartWeek.AddDays((Model.Timetable.Week * 7) + 1);
}
<h1>Můj rozvrh</h1>
<p class="table-heading">
    Týden @firstDayOfThisWeek.ToShortDateString() - @firstDayOfThisWeek.AddDays(6).ToShortDateString()
</p>
@if (Model.DisplayModeRow == null || Model.DisplayModeRow == false)
{
    <div class="timetable box-shadow">
        <input hidden type="checkbox" id="displayModeRow">
        @for (int i = 0; i < Model.TimeFramesByDay.Length; i++)
        {
            <div class="tt-day-group">
                <div class="timeframe-day">@days[i]<br><small>@firstDayOfThisWeek.AddDays(i).ToString("d. M.")</small></div>

                @foreach (var tf in Model.TimeFramesByDay[i])
                {
                    if (tf.TimetableChange != null)
                    {
                        if ((bool)tf.TimetableChange.Canceled)
                        {
                            <div class="timeframe timeframe-change">
                                @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                                <strong>
                                    Volno
                                </strong><br>
                            </div>
                        }
                        else
                        {
                            var subjectInstance = tf.TimetableChange.CurrentSubjectInstance;
                            subjectInstance ??= tf.TimetableRecord.SubjectInstance;
                            var room = tf.TimetableChange.CurrentRoom;
                            room ??= tf.TimetableRecord.Room;
                            var studentGroup = tf.TimetableChange.StudentGroup;
                            <div class="timeframe timeframe-change">
                                @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                                <strong>
                                    @($"{LanguageHelper.getShorterString(subjectInstance.SubjectType.Name, 99)}")
                                </strong><br>
                                @if (studentGroup == null)
                                {
                                    @foreach (var enrollment in subjectInstance.Enrollments)
                                    {
                                        @(enrollment.StudentGroup.GetName() + ",")
                                    }
                                }
                                else
                                {
                                    @(studentGroup.GetName() + ",")
                                }
                                <br>
                                @($"{room.Name}")<br>
                            </div>
                        }
                    }
                    else if (tf.TimetableRecord != null)
                    {
                        var si = tf.TimetableRecord.SubjectInstance;
                        <div class="timeframe">
                            @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                            <strong>
                                @(LanguageHelper.getShorterString(si.SubjectType.Name, 99))
                            </strong><br>
                            @foreach (var enrollment in si.Enrollments)
                            {
                                @(enrollment.StudentGroup.GetName() + ",")
                            }
                            <br>
                            @tf.TimetableRecord.Room.Name<br>
                        </div>
                    }
                    else
                    {
                        <div class="timeframe timeframe-blank">
                            @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")
                        </div>
                    }

                }
            </div>
        }
    </div>
}
else
{<div class="timetable box-shadow flex-column">
        <input hidden type="checkbox" id="displayModeRow" checked>
        @for (int i = 0; i < Model.TimeFramesByDay.Length; i++)
        {
            <div class="tt-day-group d-flex flex-row">
                <div class="timeframe-day tt-width-5">@days[i]<br><small>@firstDayOfThisWeek.AddDays(i).ToString("d. M.")</small></div>

                @foreach (var tf in Model.TimeFramesByDay[i])
                {
                    if (tf.TimetableChange != null)
                    {
                        if ((bool)tf.TimetableChange.Canceled)
                        {
                            <div class="timeframe tt-width-5 timeframe-change">
                                @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                                <strong>
                                    Volno
                                </strong><br>
                            </div>
                        }
                        else
                        {
                            var subjectInstance = tf.TimetableChange.CurrentSubjectInstance;
                            subjectInstance ??= tf.TimetableRecord.SubjectInstance;
                            var room = tf.TimetableChange.CurrentRoom;
                            room ??= tf.TimetableRecord.Room;
                            var studentGroup = tf.TimetableChange.StudentGroup;
                            <div class="timeframe tt-width-5 timeframe-change">
                                @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                                <strong>
                                    @($"{LanguageHelper.getShorterString(subjectInstance.SubjectType.Name, 99)}")
                                </strong><br>
                                @if (studentGroup == null)
                                {
                                    @foreach (var enrollment in subjectInstance.Enrollments)
                                    {
                                        @(enrollment.StudentGroup.GetName() + ",")
                                    }
                                }
                                else
                                {
                                    @(studentGroup.GetName() + ",")
                                }
                                <br>
                                @($"{room.Name}")<br>
                            </div>
                        }
                    }
                    else if (tf.TimetableRecord != null)
                    {
                        var si = tf.TimetableRecord.SubjectInstance;
                        <div class="timeframe tt-width-5">
                            @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")<br>
                            <strong>
                                @(LanguageHelper.getShorterString(si.SubjectType.Name, 99))
                            </strong><br>
                            @foreach (var enrollment in si.Enrollments)
                            {
                                @(enrollment.StudentGroup.GetName() + ",")
                            }
                            <br>
                            @tf.TimetableRecord.Room.Name<br>
                        </div>
                    }
                    else
                    {
                        <div class="timeframe timeframe-blank tt-width-5">
                            @tf.Start.ToString("HH:mm") - @tf.End.ToString("HH:mm")
                        </div>
                    }

                }
            </div>
        }
    </div>
}
<h2 class="mt-4">Nezapsané hodiny<small><span class="badge badge-pill badge-warning ml-3">@Model.LessonRecords.Count()</span></small></h2>
<table class="table">
    <thead>
        <tr>
            <th>
                Předmět
            </th>
            <th>
                Datum (čas)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody class="table-white">
        @foreach (var lr in Model.LessonRecords)
        {
            <tr>
                <td>
                    @lr.SubjectInstance.GetFullName()
                </td>
                <td>
                    @getDateString((int)lr.Week, (int)lr.TimeFrame.DayOfWeek) @($"({lr.TimeFrame.Start:HH:mm} - {lr.TimeFrame.End:HH:mm})")
                </td>
                <td class="btn-section">
                    <a asp-page="/Teacher/LessonRecords/Index" asp-route-subjectInstanceId="@lr.SubjectInstanceId" asp-route-week="@lr.Week" asp-route-timeFrameId="@lr.TimeFrameId" class="btn btn-primary">Zapsat hodinu</a>
                </td>
            </tr>
        }

    </tbody>
</table>
@{
    string getDateString(int week, int dayOfWeek)
    {
        return firstDayOfTermStartWeek.AddDays((double)(((week - 1) * 7) + dayOfWeek)).ToString("dddd, dd. MM.");
    }
}