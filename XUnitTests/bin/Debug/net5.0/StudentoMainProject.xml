<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StudentoMainProject</name>
    </assembly>
    <members>
        <member name="M:SchoolGradebook.API.AuthController.LogIn(SchoolGradebook.API.InputModelObject)">
            <summary>
            Gets the auth session cookie
            </summary>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.AuthController.LogOut">
            <summary>
            Clears the auth session cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.AuthController.GetUserInfo">
            <summary>
            Gets the information of a user's role and id, only if logged in
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.GradeAverages.GradeAverageController.GetSubjectInstanceAverage(System.Int32)">
            <summary>
            Gets an average for subject instance
            </summary>
            <param name="subjectInstanceId"></param>
            <returns>
            Returns newest grade average for subject instance
            </returns>
        </member>
        <member name="M:SchoolGradebook.API.GradeAverages.GradeAverageController.GetSubjectInstanceStudentAverage(System.Int32)">
            <summary>
            Gets an average for a subject for a student
            </summary>
            <param name="subjectInstanceId"></param>
            <returns>
            Returns the newest grade average for subject instance/student id combination
            </returns>
        </member>
        <member name="M:SchoolGradebook.API.GradeAverages.GradeAverageController.CalculateGradeAverageForSubjectInstance(System.Int32)">
            <summary>
            Calculates a new average for a subject instance
            </summary>
            <param name="subjectInstanceId"></param>
            <returns>
            Action result
            </returns>
        </member>
        <member name="M:SchoolGradebook.API.GradeAverages.GradeAverageController.CalculateGradeAverageForStudentsOnSubjectInstance(System.Int32)">
            <summary>
            Calculates an average for a student for a given subjectInstance
            </summary>
            /
            <param name="subjectInstanceId"></param>
            <returns>Action result</returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherGetGrades(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Gets all grades by the selected filter
            </summary>
            <param name="studentId"></param>
            <param name="subjectInstanceId"></param>
            <param name="gradeValueFormat">0 = "internal" (default) from -10 to 110, 1 = "decimal" from 0.6 to 5.0, 2 = "display" from 1+ to 5- (falls back to decimal)</param>
            <returns>Grades</returns>
            <response code="200">Returns grades</response>
            <response code="403">If the user is not a teacher, or is not allowed to view the selected student/subject</response>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherGetGrade(System.Int32,System.Int32)">
            <summary>
            Gets a single grade
            </summary>
            <param name="id"></param>
            <param name="gradeValueFormat">0 = "internal" (default) from -10 to 110, 1 = "decimal" from 0.6 to 5.0, 2 = "display" from 1+ to 5- (falls back to decimal)</param>
            <returns>Grade</returns>
            <response code="200">Returns the grade</response>
            <response code="404">If grade is not found</response>
            <response code="403">If the user is not a teacher, or is not allowed to view the selected grade</response>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherPostGrade(SchoolGradebook.API.Grades.GradeObject)">
            <summary>
            Creates a single grade for teacher
            </summary>
            <param name="grade"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherUpdateGrade(SchoolGradebook.API.Grades.GradeObject)">
            <summary>
            Updates a single grade for teacher
            </summary>
            <param name="grade"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherPostGrades(System.Collections.Generic.ICollection{SchoolGradebook.API.Grades.GradeObject})">
            <summary>
            Creates grades for teachers in batch
            </summary>
            <param name="grades"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherUpdateGrades(System.Collections.Generic.ICollection{SchoolGradebook.API.Grades.GradeObject})">
            <summary>
            Updates grades for teacher in batch 
            </summary>
            <param name="grades"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherDeleteGrades(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Deletes grades for teacher in batch
            </summary>
            <param name="gradeIds"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherPostGradeGroup(SchoolGradebook.API.Grades.GradeGroupObject)">
            <summary>
            Adds a grade group
            </summary>
            <param name="gradeGroup"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherUpdateGradeGroup(SchoolGradebook.API.Grades.GradeGroupObject)">
            <summary>
            Updates a single grade group for teacher
            </summary>
            <param name="gradeGroup"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.TeacherDeleteGradeGroups(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Deletes grade groups for teacher in batch
            </summary>
            <param name="gradeGroupIds"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.StudentGetGrades(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Gets all grades by the selected filter for students
            </summary>
            <param name="subjectInstanceId"></param>
            <param name="gradeValueFormat">0 = "internal" (default) from -10 to 110, 1 = "decimal" from 0.6 to 5.0, 2 = "display" from 1+ to 5- (falls back to decimal)</param>
            <returns>Grades</returns>
            <response code="200">Returns grades</response>
            <response code="403">If the user is not a student, or is not allowed to view the selected subject</response>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.StudentPostGrade(SchoolGradebook.API.Grades.GradeObject)">
            <summary>
            Adds a single grade for a student
            </summary>
            <param name="grade">Expecting internal grade value (-10 to 110)</param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Grades.GradesController.StudentDeleteGrades(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Deletes grades for students in batch
            </summary>
            <param name="gradeIds"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectInstances.SubjectInstancesController.TeacherGetSubjectInstance(System.Int32)">
            <summary>
            Gets a single subject instance for teacher
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectInstances.SubjectInstancesController.StudentGetSubjectInstance(System.Int32)">
            <summary>
            Gets a single subject instance for student
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectInstances.SubjectInstancesController.StudentGetAllSubjectInstances">
            <summary>
            Gets all subject instances for student
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectInstances.SubjectInstancesController.TeacherGetAllSubjectInstances">
            <summary>
            Get all subject instances for teacher
            </summary>
            <remarks>
            Does not retrive teacher (because the caller is the teacher) or students enrolled
            </remarks>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.GetSubjectMaterials(System.Int32)">
            <summary>
            Gets all subject materials in a subject
            </summary>
            <param name="subjectInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.AddSubjectMaterial(SchoolGradebook.API.SubjectMaterials.FormFileObject)">
            <summary>
            Adds subject material with specified details
            </summary>
            <param name="formFileObject"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.UpdateSubjectMaterial(SchoolGradebook.API.SubjectMaterials.SubjectMaterialObject)">
            <summary>
            Updates subject material
            </summary>
            <param name="sm">Needs to have a specified id</param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.DeleteSubjectMaterial(System.Guid)">
            <summary>
            Soft deletes subject material
            </summary>
            <param name="subjectMaterialId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.AddSubjectMaterialGroup(System.String)">
            <summary>
            Adds subject material group
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.UpdateSubjectMaterialGroup(System.Int32,System.String)">
            <summary>
            Updates subject material group
            </summary>
            <param name="subjectMaterialGroupId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.DeleteSubjectMaterialGroup(System.Int32)">
            <summary>
            Deletes subject material group
            </summary>
            <param name="subjectMaterialGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentGetSubjectMaterials(System.Int32)">
            <summary>
            Gets all subject materials in a subject
            </summary>
            <param name="subjectInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentAddSubjectMaterial(SchoolGradebook.API.SubjectMaterials.FormFileObject)">
            <summary>
            Adds a subject material
            </summary>
            <param name="formFileObject"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentDeleteSubjectMaterial(System.Guid)">
            <summary>
            Soft deletes subject material group
            </summary>
            <param name="subjectMaterialId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentAddSubjectMaterialGroup(System.String)">
            <summary>
            Adds subject material group for student
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentUpdateSubjectMaterialGroup(System.Int32,System.String)">
            <summary>
            Updates subject material group
            </summary>
            <param name="subjectMaterialGroupId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.SubjectMaterials.SubjectMaterialsController.StudentDeleteSubjectMaterialGroup(System.Int32)">
            <summary>
            Deletes subject material group
            </summary>
            <param name="subjectMaterialGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.API.Timetable.TimetableController.GetTimetableForStudent(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets timetable weeks for student
            </summary>
            <param name="week">Optional, if not set, will be automatically inferred</param>
            <param name="wantMultipleWeeks">True if you want one week before and after the selected week</param>
            <returns>Timetable week objects</returns>
            <response code="200">Returns timetable weeks</response>
            <response code="403">If the user is not a student</response>
        </member>
        <member name="M:SchoolGradebook.API.Timetable.TimetableController.GetTimetableForTeacher(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets timetable weeks for teacher
            </summary>
            <param name="week">Optional, if not set, will be automatically inferred</param>
            <param name="wantMultipleWeeks">True if you want one week before and after the selected week</param>
            <returns>Timetable week objects</returns>
            <response code="200">Returns timetable weeks</response>
            <response code="403">If the user is not a teacher</response>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.SetGradeValue(System.String)">
            <summary>
            Sets the grade value from normal input
            </summary>
            <param name="value">Grade value - please use values from 1 to 5, they can all have modifiers (+ or -) after the digit</param>
            <exception cref="T:System.ArgumentException">If the value is not found in our mapping</exception>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.SetGradeValue(System.Int32)">
            <summary>
            Sets the grade value
            </summary>
            <param name="value">Grade value - please use values from -10 to 110</param>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.GetGradeValueInDecimal">
            <summary>
            Gets the decimal representation of grade value
            </summary>
            <returns>Float value examples: 1.48, 0.6, 5.0</returns>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.GetGradeValue">
            <summary>
            Gets the display grade value like 1+,5,3-; if value out of mapping then it returns the decimal
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.GetInternalGradeValue">
            <summary>
            Gets the internal grade value like 110, 57 or -10
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.MapInnerValueToDisplayValue(System.Int32)">
            <summary>
            Maps the internal grade value (eg. 110) to the display value (eg. 1+)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.MapInnerValueToDecimalValue(System.Single)">
            <summary>
            Maps the inner value (110) to the decimal value (0.6), lowest returned is 5.0
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.Models.Grade.MapDisplayValueToInnerValue(System.String)">
            <summary>
            Returns the mapped grade value
            </summary>
            <param name="value">Grade value - please use values from 1 to 5, they can all have modifiers (+ or -) after the digit</param>
            <exception cref="T:System.ArgumentException">If the value is not found in our mapping</exception>
        </member>
        <member name="M:SchoolGradebook.Services.Analytics.GetSubjectAverageForStudentAsync(SchoolGradebook.Models.Grade[])">
            <summary>
            Gets the subject average for specified student and subject instance
            </summary>
            <param name="grades"></param>
            <returns>Subject average in 2 precision points (eg. 1.48)</returns>
        </member>
        <member name="M:SchoolGradebook.Services.Analytics.GetSubjectAverageAsync(SchoolGradebook.Models.Grade[])">
            <summary>
            Gets the subject average in decimal (eg. 1.481)
            </summary>
            <param name="grades"></param>
            <returns>Subject average decimal number for 3 precision points</returns>
        </member>
        <member name="M:SchoolGradebook.Services.GradeAverageService.AddGradeAverageForSubjectInstace(SchoolGradebook.Models.GradeAverage)">
            <summary>
            Adds a grade average for subject instance
            </summary>
            <param name="gradeAverage"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolGradebook.Services.TimeFrameService.AddTimeFrame(SchoolGradebook.Models.TimeFrame)">
            <exception cref="T:System.ArgumentException">Throws ArgumentException if TimeFrame has invalid start and end times</exception>
        </member>
    </members>
</doc>
