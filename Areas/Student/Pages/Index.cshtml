@page
@model SchoolGradebook.Areas.Student.Pages.IndexModel
@using  SchoolGradebook.Services
@using  SchoolGradebook.Models
@using Microsoft.AspNetCore.Http;
@using System.Security.Claims;
@inject Analytics  analytics
@inject IHttpContextAccessor httpContextAccessor
@inject SchoolContext context
@{
    ViewData["Title"] = "Domů";
    string UserId = httpContextAccessor.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);
    UserId = UserId == null ? "" : UserId;
    Student s = context.Students
                    .Where(g => g.UserAuthId == UserId).FirstOrDefault();
    String firstName = "";
    if (s != null)
    {
        firstName = s.FirstName;
    }


}
<div class="text-center">
    <div class="d-flex flex-row h-100">
        <div class="d-flex flex-row w-50">
            <table class="table mr-3">
                <thead>
                    <tr>
                        <th>
                            Známka
                        </th>
                        <th>
                            Předmět
                        </th>
                        <th>
                            Datum
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var grade in await analytics.GetRecentGradesByUserIdAsync(UserId))
                    {
                        <tr>
                            <td>
                                @grade.Value.ToString()
                            </td>
                            <td>
                                @grade.Subject.Name.ToString()
                            </td>
                            <td>
                                @LanguageHelper.getRelativeTime(grade.Added)
                            </td>
                            <td>
                                <a asp-page="Grades/Details" asp-route-gradeId="@grade.Id">Zobrazit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex flex-column w-50">
            <div class="ml-3 text-left">
                <h1 style="font-weight: 400;">
                    Ahoj <strong>@LanguageHelper.Sklonuj(firstName),</strong><br>jsi <strong>skvělý</strong> student!
                </h1>
                <h3 class="mt-5" style="font-weight: 400;">
                    Celkový průměr: <strong>
                        @((await analytics.GetTotalAverageAsync(UserId)).CompareTo(Double.NaN) == 0 ? 
                            "Žádné známky" : (await analytics.GetTotalAverageAsync(UserId)).ToString("f2"))
                    </strong>
                </h3>
                @Html.Raw(ViewData["ComparisonString"])
            </div>
        </div>
    </div>
    <p class="text-left">Všechny předměty:</p>
    <div class="subject-container">
        @{
            Subject[] subjects = await analytics.GetAllSubjectsByStudentUserAuthAsync(UserId);
        }
        @foreach (Subject x in subjects)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@x.Name</h5>
                    <p class="card-text">@x.Teacher.getFullName()</p>
                    <p class="card-text">
                        <strong>
                            @((await analytics.GetSubjectAverageForStudentAsync(UserId, x.Id)).CompareTo(Double.NaN) == 0 ?
               "Bez známek" : (await analytics.GetSubjectAverageForStudentAsync(UserId, x.Id)).ToString("f2"))
                        </strong>
                    </p>
                    <a class="btn btn-primary" asp-page="/Subjects/Details" asp-route-Id="@x.Id">Zobrazit známky</a>
                </div>
            </div>
        }
    </div>
</div>
